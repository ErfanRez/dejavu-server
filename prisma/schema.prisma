// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Property {
  id            String          @id @default(uuid())
  title         String
  category      String
  type          String
  views         View[]
  area          Int
  location      String          @db.Text
  floor         Int
  bedroomCount  Int
  bathroomCount Int
  parkingCount  Int
  price         String
  rate          Decimal
  images        PropertyImage[]
  description   String?         @db.Text
  status        Boolean         @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model View {
  id         String   @id @default(uuid())
  title      String
  propertyId String
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([propertyId])
}

model PropertyImage {
  id         String   @id @default(uuid())
  url        String   @db.Text
  propertyId String
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([propertyId])
}

model Category {
  id    String @id @default(uuid())
  title String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Type {
  id    String @id @default(uuid())
  title String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Article {
  id          String         @id @default(uuid())
  title       String
  description String         @db.Text
  body        String         @db.Text
  images      ArticleImage[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ArticleImage {
  id        String  @id @default(uuid())
  url       String  @db.Text
  articleId String
  property  Article @relation(fields: [articleId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([articleId])
}

model Agent {
  id       String  @id @default(uuid())
  name     String  @unique
  imageUrl String? @default("https://cdn-icons-png.flaticon.com/512/3135/3135715.png")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// model feature {
//   id    Int @id @default(autoincrement())
//   title String
// }

// model Position {
//   id Int @id @default(autoincrement())
//   x String
//   y String
// }
